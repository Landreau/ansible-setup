Ansible Dev Workstation — One‑liners et explications (Debian/Ubuntu + Arch)
Auteur: Landreau/ansible-setup

Résumé
Ce dépôt provisionne une machine de développement pour Debian/Ubuntu et Arch Linux avec:
- APT non‑interactif (Debian/Ubuntu) + dépôt GitHub CLI pour gh
- Arch: optimisation des miroirs, AUR via yay, dwm-git, Wireshark (wireshark-qt par défaut), remaps (python3→python, tldr→tealdeer), filtrage clang-format/clang-tidy (fournis par clang)
- Préflight non bloquant de disponibilité des paquets
- Outils: zsh + zap, starship, FNM + Node LTS, VS Code, tmux + TPM, Nerd Fonts, st (suckless terminal), etc.
- Possibilité d’utiliser vos configs complètes .zshrc et i3

Prérequis
- Distro: Debian 11+/Ubuntu 22.04+ ou Arch Linux
- Accès sudo
- Connexion Internet
- Si vous activez vos configs complètes: placez vos fichiers dans:
  - files/zsh/.zshrc
  - files/i3/config

0) TL;DR — Bootstrap distant (recommandé)
Utilise scripts/bootstrap.sh pour détecter la distro, installer Ansible et lancer le playbook.

- Branche main:
REPO_URL="https://github.com/Landreau/ansible-setup.git" bash -c "$(curl -fsSL https://raw.githubusercontent.com/Landreau/ansible-setup/main/scripts/bootstrap.sh)"

- Branche spécifique:
REPO_URL="https://github.com/Landreau/ansible-setup.git" BRANCH="feat/cross-distro-setup" bash -c "$(curl -fsSL https://raw.githubusercontent.com/Landreau/ansible-setup/main/scripts/bootstrap.sh)"

Paramètres utilisables avec le bootstrap:
- ASK_SUDO=false          # désactive la demande sudo upfront (rarement utile)
- DEST_DIR=/tmp/dev-setup # dossier de clone si REPO_URL est utilisé

1) Sans bootstrap — one‑liner Debian/Ubuntu
Standard:
bash -c 'set -e; sudo apt update; sudo apt install -y git ansible python3; REPO_URL="https://github.com/Landreau/ansible-setup.git"; DEST="${REPO_URL##*/}"; DEST="${DEST%.git}"; rm -rf "$DEST"; git clone "$REPO_URL" "$DEST"; cd "$DEST"; ansible-galaxy collection install -U community.general; sudo -v; ansible-playbook setup.yml'

Avec vos configs complètes .zshrc et i3 activées à l’exécution:
bash -c 'set -e; sudo apt update; sudo apt install -y git ansible python3; REPO_URL="https://github.com/Landreau/ansible-setup.git"; DEST="${REPO_URL##*/}"; DEST="${DEST%.git}"; rm -rf "$DEST"; git clone "$REPO_URL" "$DEST"; cd "$DEST"; ansible-galaxy collection install -U community.general; sudo -v; ansible-playbook setup.yml -e '\''{"zsh":{"manage_full_rc":true},"i3":{"manage_full_config":true}}'\'''

2) Sans bootstrap — one‑liner Arch
Standard:
bash -c 'set -e; sudo pacman -Sy --needed --noconfirm git ansible python; REPO_URL="https://github.com/Landreau/ansible-setup.git"; DEST="${REPO_URL##*/}"; DEST="${DEST%.git}"; rm -rf "$DEST"; git clone "$REPO_URL" "$DEST"; cd "$DEST"; ansible-galaxy collection install -U community.general; sudo -v; ansible-playbook setup.yml'

Avec vos configs complètes .zshrc et i3 activées à l’exécution:
bash -c 'set -e; sudo pacman -Sy --needed --noconfirm git ansible python; REPO_URL="https://github.com/Landreau/ansible-setup.git"; DEST="${REPO_URL##*/}"; DEST="${DEST%.git}"; rm -rf "$DEST"; git clone "$REPO_URL" "$DEST"; cd "$DEST"; ansible-galaxy collection install -U community.general; sudo -v; ansible-playbook setup.yml -e '\''{"zsh":{"manage_full_rc":true},"i3":{"manage_full_config":true}}'\'''

3) Depuis un clone local déjà présent
- Se placer dans le dépôt cloné contenant setup.yml et le dossier tasks
- Installer la collection requise puis lancer:
ansible-galaxy collection install -U community.general
sudo -v
ansible-playbook setup.yml

4) Personnalisation à l’exécution (exemples -e JSON)
- Activer vos configs complètes .zshrc et i3:
ansible-playbook setup.yml -e '{"zsh":{"manage_full_rc":true},"i3":{"manage_full_config":true}}'

- Choisir la variante Wireshark sur Arch (qt par défaut; cli possible):
ansible-playbook setup.yml -e '{"wireshark":{"arch_pkg":"wireshark-cli"}}'

- Activer l’installation de paquets AUR supplémentaires et en fournir la liste:
ansible-playbook setup.yml -e '{"features":{"install_aur_extra":true},"aur_extra_packages":["bun-bin","i3lock-color","ngrok"]}'

- Forcer l’installation de fnm par script (au lieu de system/pacman):
ansible-playbook setup.yml -e '{"methods":{"fnm":"script"}}'

Astuce de quoting: sous bash, gardez -e '<json>' entre apostrophes simples. Pour insérer une apostrophe dans la chaîne, utilisez '\''.

5) Contrôle de l’exécution
- Reprendre à partir d’une tâche:
ansible-playbook setup.yml --start-at-task "Installer paquets de base (Pacman)"

- Dry‑run (vérification sans modifier):
ansible-playbook setup.yml --check

- Verbose:
ansible-playbook setup.yml -vv

6) Où placer vos fichiers personnalisés
- .zshrc complet: files/zsh/.zshrc
  Activez via vars.yml (zsh.manage_full_rc: true) ou en ligne de commande (voir section 4).
- i3 config complète: files/i3/config
  Activez via vars.yml (i3.manage_full_config: true) ou en ligne de commande.

Quand ces modes sont activés, le playbook n’injecte plus ses blocs automatiques dans .zshrc/i3: mettez dans vos fichiers les initialisations voulues (starship, direnv, zoxide, fnm, pyenv, cargo, go, etc.).

7) Dépannage rapide
- APT prompts/locks: le playbook passe APT en non‑interactif et stoppe apt‑daily au début, puis relance les timers en fin. Si un lock persiste, attendez quelques secondes et relancez.
- Pacman “could not find or read package”: souvent un nom Debian (ex: wireshark, python3, tldr). Le playbook remappe déjà vers wireshark-qt/python/tealdeer et filtre clang-format/clang-tidy (fournis par clang). Ouvrez un ticket si un autre paquet coince.
- yay demande le mot de passe: le drop‑in sudoers pour pacman/pacman-key est créé lors du premier run. La première exécution peut demander le mot de passe; ensuite yay utilisera --sudoloop.
- Groupe wireshark: l’utilisateur est ajouté au groupe. Pour appliquer immédiatement sans relogin:
newgrp wireshark
- Chemin des binaires user-local: si ~/.local/bin n’est pas pris en compte, ouvrez un nouveau terminal (le PATH est ajouté au .zshrc).

8) Références rapides
- Dépôt: https://github.com/Landreau/ansible-setup
- Bootstrap (br. main):
REPO_URL="https://github.com/Landreau/ansible-setup.git" bash -c "$(curl -fsSL https://raw.githubusercontent.com/Landreau/ansible-setup/main/scripts/bootstrap.sh)"
- Collection Ansible requise:
ansible-galaxy collection install -U community.general

Fin du fichier.
